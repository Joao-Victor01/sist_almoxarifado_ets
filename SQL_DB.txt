-- Tabelas independentes (criadas primeiro)
CREATE TABLE setor (
    setor_id SERIAL PRIMARY KEY,
    nome_setor VARCHAR(100) NOT NULL,
    descricao_setor VARCHAR(255)
);

CREATE TABLE categoria (
    categoria_id SERIAL PRIMARY KEY,
    nome_categoria VARCHAR(50) NOT NULL,
    descricao_categoria VARCHAR(255),
    nome_original VARCHAR(100) NOT NULL
);

-- Tabelas dependentes
CREATE TABLE usuario (
    usuario_id SERIAL PRIMARY KEY,
    siape_usuario VARCHAR(20) UNIQUE,
    nome_usuario VARCHAR(100) NOT NULL,
    tipo_usuario INTEGER NOT NULL,
    email_usuario VARCHAR(100) UNIQUE NOT NULL,
    senha_usuario VARCHAR(256) NOT NULL,
    setor_id INTEGER NOT NULL REFERENCES setor(setor_id),
    username VARCHAR(100) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE item (
    item_id SERIAL PRIMARY KEY,
    nome_item VARCHAR(256) NOT NULL,
    descricao_item VARCHAR(255) NOT NULL,
    unidade_medida_item VARCHAR(50) NOT NULL,
    quantidade_item INTEGER NOT NULL,
    data_entrada_item TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    data_saida_item TIMESTAMP,
    data_validade_item DATE,
    quantidade_minima_item INTEGER,
    categoria_id INTEGER NOT NULL REFERENCES categoria(categoria_id),
    auditoria_usuario_id INTEGER NOT NULL REFERENCES usuario(usuario_id),
    marca_item VARCHAR(200),
    nome_item_original VARCHAR(256) NOT NULL,
    ativo BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE retirada (
    retirada_id SERIAL PRIMARY KEY,
    usuario_id INTEGER NOT NULL REFERENCES usuario(usuario_id),
    autorizado_por INTEGER REFERENCES usuario(usuario_id),
    solicitado_localmente_por VARCHAR(255),
    setor_id INTEGER NOT NULL REFERENCES setor(setor_id),
    status INTEGER NOT NULL DEFAULT 1, -- 1=PENDENTE, 2=AUTORIZADA, 3=CONCLUIDA, 4=NEGADA
    detalhe_status TEXT,
    justificativa TEXT,
    data_solicitacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabelas com dependências múltiplas
CREATE TABLE alerta (
    alerta_id SERIAL PRIMARY KEY,
    tipo_alerta INTEGER NOT NULL, -- 1=ESTOQUE_BAIXO, 2=VALIDADE_PROXIMA
    item_id INTEGER NOT NULL REFERENCES item(item_id),
    data_alerta TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    mensagem_alerta VARCHAR(255) NOT NULL,
    visualizado BOOLEAN NOT NULL DEFAULT FALSE,
    ignorar_novos BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE retirada_item (
    retirada_id INTEGER NOT NULL REFERENCES retirada(retirada_id),
    item_id INTEGER NOT NULL REFERENCES item(item_id),
    quantidade_retirada INTEGER NOT NULL,
    PRIMARY KEY (retirada_id, item_id)
);